version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: siphera-backend
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=production
      - PORT=3007
      - CORS_ORIGIN=http://localhost:3000
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - COGNITO_USER_POOL_ID=${COGNITO_USER_POOL_ID}
      - COGNITO_IDENTITY_POOL_ID=${COGNITO_IDENTITY_POOL_ID}
      - COGNITO_CLIENT_ID=${COGNITO_CLIENT_ID}
      - USERS_TABLE=${USERS_TABLE:-siphera-users-dev}
      - MESSAGES_TABLE=${MESSAGES_TABLE:-siphera-messages-dev}
      - SESSIONS_TABLE=${SESSIONS_TABLE:-siphera-sessions-dev}
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - siphera-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3007/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: siphera-frontend
    ports:
      - "3000:80"
    environment:
      - PORT=3000
      - REACT_APP_API_URL=http://localhost:3007
      - REACT_APP_WEBSOCKET_URL=ws://localhost:3007
      - REACT_APP_AWS_REGION=${AWS_REGION:-us-east-1}
      - REACT_APP_USER_POOL_ID=${COGNITO_USER_POOL_ID}
      - REACT_APP_USER_POOL_WEB_CLIENT_ID=${COGNITO_CLIENT_ID}
      - REACT_APP_IDENTITY_POOL_ID=${COGNITO_IDENTITY_POOL_ID}
      - CHOKIDAR_USEPOLLING=true
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - siphera-network
    restart: unless-stopped

networks:
  siphera-network:
    driver: bridge